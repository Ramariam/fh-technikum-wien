#include <stdio.h>
#include <stdlib.h>

#define MAX_LENGTH 1000

void scanArray(int *arr, int length);
void sortArray(int *arr, int length);
void findClosestPair(int *arr1, int *arr2, int length1, int length2);

int main()
{
    int length1, length2;

 
    scanf("%d %d", &length1, &length2);

    int arr1[MAX_LENGTH], arr2[MAX_LENGTH];

    scanArray(arr1, length1);

    scanArray(arr2, length2);

    sortArray(arr1, length1);
    sortArray(arr2, length2);

    findClosestPair(arr1, arr2, length1, length2);

    return 0;
}

void scanArray(int *arr, int length)
{
    for (int i = 0; i < length; ++i)
    {
        scanf("%d", &arr[i]);
    }
}

void sortArray(int *arr, int length)
{
    for (int i = 0; i < length - 1; i++)
    {
        for (int j = 0; j < length - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void findClosestPair(int *arr1, int *arr2, int length1, int length2)
{
    int diff = abs(arr1[0] - arr2[0]);
    int number1 = arr1[0], number2 = arr2[0];

    for (int i = 0; i < length1; ++i)
    {
        for (int j = 0; j < length2; ++j)
        {
            int currentDiff = abs(arr1[i] - arr2[j]);
            if (currentDiff < diff)
            {
                diff = currentDiff;
                number1 = arr1[i];
                number2 = arr2[j];
            }
        }
    }

    printf(": %d (%d, %d)\n", diff, number1, number2);
}
